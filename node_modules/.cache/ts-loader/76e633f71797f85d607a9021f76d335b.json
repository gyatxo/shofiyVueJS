{"remainingRequest":"/var/www/urgen/node_modules/babel-loader/lib/index.js!/var/www/urgen/node_modules/ts-loader/index.js??ref--14-2!/var/www/urgen/src/store/modules/product.ts","dependencies":[{"path":"/var/www/urgen/src/store/modules/product.ts","mtime":1654494972726},{"path":"/var/www/urgen/babel.config.js","mtime":1654057501594},{"path":"/var/www/urgen/node_modules/cache-loader/dist/cjs.js","mtime":1654062175019},{"path":"/var/www/urgen/node_modules/babel-loader/lib/index.js","mtime":1654062175582},{"path":"/var/www/urgen/node_modules/ts-loader/index.js","mtime":1654062175647}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":"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","names":["state","productList","itemCount","userItem","filterProductList","filteredProductList","total","productDetail","getters","allProducts","getCount","actions","getProducts","commit","fetch","res","json","data","product","forEach","productCount","console","log","setUserItem","addedItem","removeCart","id","filterProduct","payload","totalAmt","getProduct","mutations","setProduct","index","findIndex","stock","overBy","alert","confirm","cartItems","filter","item","cat","minValue","maxValue","prd","parseInt","price","slice","length","category","prc","productId"],"sourceRoot":"","sources":["/var/www/urgen/src/store/modules/product.ts"],"sourcesContent":["const state= {\n        productList: [],\n        itemCount: 0,\n        userItem: [],\n        filterProductList: [],\n        filteredProductList: [],\n        total: 0,\n        productDetail: []\n}\nconst  getters= {\n    allProducts: state => state.productList,\n    getCount: state => state.itemCount,\n    userItem: state => state.userItem,\n    filteredProductList: state => state.filteredProductList,\n    total: state => state.total,\n    productDetail: state => state.productDetail,\n}\nconst  actions= {\n    async getProducts ({ commit }){\n        const res = await fetch('https://electronic-ecommerce.herokuapp.com/api/v1/product');\n        const data = await res.json();\n        data.data.product.forEach((product)=> product.productCount=0)\n        console.log(data.data.product)\n        commit('setProduct', data.data.product);\n    },\n    setUserItem ({commit}, addedItem) {\n        commit('setUserItem' , addedItem);\n    },\n    removeCart ({commit}, id : Number) {\n        commit('removeCart' , id);\n    },\n    // filterProduct ({commit}, minValue, maxValue, cat) {\n    //     commit('filterProduct', minValue, maxValue, cat);\n    // }\n    filterProduct ({commit}, payload){\n        // console.log(payload)\n        commit('filterProduct', payload)\n    },\n    totalAmt ({commit},payload){\n        commit('totalAmt', payload);\n    },\n    getProduct ({commit}, id:string){\n        commit('getProduct', id);\n    }\n}\n\nconst  mutations= {\n    setProduct (state, productList) {\n        state.productList= productList;\n        state.filterProductList= productList;\n    },\n    setUserItem (state:object, addedItem:object) {\n        let index= state.userItem.findIndex((product)=> product.id == addedItem.id);\n        if(index < 0){\n            state.userItem = [...state.userItem, addedItem];\n            state.itemCount++;\n        }\n        else{\n            if((state.userItem[index].productCount += addedItem.productCount) <= addedItem.stock){\n            state.userItem[index].productCount += addedItem.productCount; \n            state.userItem = [...state.userItem];\n            console.log(state.userItem);\n            }\n            else{\n                let overBy = (state.userItem[index].productCount + addedItem.productCount)-addedItem.stock;\n                alert(`Item exceeds the stock limit. Only ${overBy} item left`)\n            }\n        }\n    },\n    removeCart (state, id) {\n        if(confirm('Are you sure?')){\n        let cartItems = state.userItem.filter((item)=> item.id !== id);\n        state.userItem = cartItems;\n        }\n    },\n    // filterProduct (state, minValue, maxValue, cat){\n    //     if(cat !== '' && minValue !== '' && maxValue !== ''){\n    //         state.filteredProductList = state.filterProductList.filter((product)=>\n    //         (product.price >= minValue && product.price) <= maxValue && product.category[1] === cat ;\n    //         )\n    //     }else{\n    //         console.log('filter failed')\n    //     }\n    //     console.log(state.filteredProductList);\n    // },\n    filterProduct (state,payload) {\n        if(payload.cat !== '' && payload.minValue !== '' && payload.maxValue !== ''){\n            state.filteredProductList =state.filterProductList.filter((prd)=> (parseInt(''+prd.price.slice(1,prd.price.length)) >= parseInt('' + payload.minValue) && parseInt(''+prd.price.slice(1,prd.price.length))) <= parseInt(''+payload.maxValue) && prd.category[1] === payload.cat );\n        }\n        else if (payload.cat && payload.cat !== 'all'){\n            state.filteredProductList = state.filterProductList.filter((prd)=> prd.category[1] === payload.cat)\n        }\n        else if(payload.cat === 'all'){\n            state.filteredProductList = state.productList;\n        }\n    },\n    totalAmt (state, item){\n        let prc = parseInt(''+ item.price.slice(1,item.price.length));\n        state.total += prc * item.productCount;\n        console.log(state.total,prc, item.productCount,'total')\n    },\n    getProduct (state, productId:string){\n        let id = parseInt(''+productId);\n        state.productDetail = state.productList.filter((prd)=> prd.id === id);\n        console.log(state.productDetail);\n    }\n}\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n}"]}]}