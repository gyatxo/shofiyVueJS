{"remainingRequest":"/var/www/urgen/node_modules/babel-loader/lib/index.js!/var/www/urgen/node_modules/ts-loader/index.js??ref--14-2!/var/www/urgen/src/store/modules/product.ts","dependencies":[{"path":"/var/www/urgen/src/store/modules/product.ts","mtime":1654256033678},{"path":"/var/www/urgen/babel.config.js","mtime":1654057501594},{"path":"/var/www/urgen/node_modules/cache-loader/dist/cjs.js","mtime":1654062175019},{"path":"/var/www/urgen/node_modules/babel-loader/lib/index.js","mtime":1654062175582},{"path":"/var/www/urgen/node_modules/ts-loader/index.js","mtime":1654062175647}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvdmFyL3d3dy91cmdlbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkuanMiOwppbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICIvdmFyL3d3dy91cmdlbi9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi92YXIvd3d3L3VyZ2VuL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLWluZGV4LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKdmFyIHN0YXRlID0gewogIHByb2R1Y3RMaXN0OiBbXSwKICBpdGVtQ291bnQ6IDAsCiAgdXNlckl0ZW06IFtdLAogIGZpbHRlclByb2R1Y3RMaXN0OiBbXSwKICBmaWx0ZXJlZFByb2R1Y3RMaXN0OiBbXQp9Owp2YXIgZ2V0dGVycyA9IHsKICBhbGxQcm9kdWN0czogZnVuY3Rpb24gYWxsUHJvZHVjdHMoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5wcm9kdWN0TGlzdDsKICB9LAogIGdldENvdW50OiBmdW5jdGlvbiBnZXRDb3VudChzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLml0ZW1Db3VudDsKICB9LAogIHVzZXJJdGVtOiBmdW5jdGlvbiB1c2VySXRlbShzdGF0ZSkgewogICAgcmV0dXJuIHN0YXRlLnVzZXJJdGVtOwogIH0KfTsKdmFyIGFjdGlvbnMgPSB7CiAgZ2V0UHJvZHVjdHM6IGZ1bmN0aW9uIGdldFByb2R1Y3RzKF9yZWYpIHsKICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgIHZhciBjb21taXQsIHJlcywgZGF0YTsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBmZXRjaCgnaHR0cHM6Ly9lbGVjdHJvbmljLWVjb21tZXJjZS5oZXJva3VhcHAuY29tL2FwaS92MS9wcm9kdWN0Jyk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcmVzLmpzb24oKTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBkYXRhID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBkYXRhLmRhdGEucHJvZHVjdC5mb3JFYWNoKGZ1bmN0aW9uIChwcm9kdWN0KSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcHJvZHVjdC5wcm9kdWN0Q291bnQgPSAwOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEuZGF0YS5wcm9kdWN0KTsKICAgICAgICAgICAgICBjb21taXQoJ3NldFByb2R1Y3QnLCBkYXRhLmRhdGEucHJvZHVjdCk7CgogICAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgc2V0VXNlckl0ZW06IGZ1bmN0aW9uIHNldFVzZXJJdGVtKF9yZWYyLCBhZGRlZEl0ZW0pIHsKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQ7CiAgICBjb21taXQoJ3NldFVzZXJJdGVtJywgYWRkZWRJdGVtKTsKICB9LAogIHJlbW92ZUNhcnQ6IGZ1bmN0aW9uIHJlbW92ZUNhcnQoX3JlZjMsIGlkKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgY29tbWl0KCdyZW1vdmVDYXJ0JywgaWQpOwogIH0sCiAgLy8gZmlsdGVyUHJvZHVjdCAoe2NvbW1pdH0sIG1pblZhbHVlLCBtYXhWYWx1ZSwgY2F0KSB7CiAgLy8gICAgIGNvbW1pdCgnZmlsdGVyUHJvZHVjdCcsIG1pblZhbHVlLCBtYXhWYWx1ZSwgY2F0KTsKICAvLyB9CiAgdGVzdDogZnVuY3Rpb24gdGVzdChfcmVmNCwgcGF5bG9hZCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgIC8vIGNvbnNvbGUubG9nKHBheWxvYWQpCiAgICBjb21taXQoJ3Rlc3QnLCBwYXlsb2FkKTsKICB9Cn07CnZhciBtdXRhdGlvbnMgPSB7CiAgc2V0UHJvZHVjdDogZnVuY3Rpb24gc2V0UHJvZHVjdChzdGF0ZSwgcHJvZHVjdExpc3QpIHsKICAgIHN0YXRlLnByb2R1Y3RMaXN0ID0gcHJvZHVjdExpc3Q7CiAgICBzdGF0ZS5maWx0ZXJQcm9kdWN0TGlzdCA9IHByb2R1Y3RMaXN0OwogIH0sCiAgc2V0VXNlckl0ZW06IGZ1bmN0aW9uIHNldFVzZXJJdGVtKHN0YXRlLCBhZGRlZEl0ZW0pIHsKICAgIHZhciBpbmRleCA9IHN0YXRlLnVzZXJJdGVtLmZpbmRJbmRleChmdW5jdGlvbiAocHJvZHVjdCkgewogICAgICByZXR1cm4gcHJvZHVjdC5pZCA9PSBhZGRlZEl0ZW0uaWQ7CiAgICB9KTsKCiAgICBpZiAoaW5kZXggPCAwKSB7CiAgICAgIHN0YXRlLnVzZXJJdGVtID0gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShzdGF0ZS51c2VySXRlbSksIFthZGRlZEl0ZW1dKTsKICAgICAgc3RhdGUuaXRlbUNvdW50Kys7CiAgICB9IGVsc2UgewogICAgICBpZiAoKHN0YXRlLnVzZXJJdGVtW2luZGV4XS5wcm9kdWN0Q291bnQgKz0gYWRkZWRJdGVtLnByb2R1Y3RDb3VudCkgPD0gYWRkZWRJdGVtLnN0b2NrKSB7CiAgICAgICAgc3RhdGUudXNlckl0ZW1baW5kZXhdLnByb2R1Y3RDb3VudCArPSBhZGRlZEl0ZW0ucHJvZHVjdENvdW50OwogICAgICAgIHN0YXRlLnVzZXJJdGVtID0gX3RvQ29uc3VtYWJsZUFycmF5KHN0YXRlLnVzZXJJdGVtKTsKICAgICAgICBjb25zb2xlLmxvZyhzdGF0ZS51c2VySXRlbSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIG92ZXJCeSA9IHN0YXRlLnVzZXJJdGVtW2luZGV4XS5wcm9kdWN0Q291bnQgKyBhZGRlZEl0ZW0ucHJvZHVjdENvdW50IC0gYWRkZWRJdGVtLnN0b2NrOwogICAgICAgIGFsZXJ0KCJJdGVtIGV4Y2VlZHMgdGhlIHN0b2NrIGxpbWl0LiBPbmx5ICIuY29uY2F0KG92ZXJCeSwgIiBpdGVtIGxlZnQiKSk7CiAgICAgIH0KICAgIH0KICB9LAogIHJlbW92ZUNhcnQ6IGZ1bmN0aW9uIHJlbW92ZUNhcnQoc3RhdGUsIGlkKSB7CiAgICBpZiAoY29uZmlybSgnQXJlIHlvdSBzdXJlPycpKSB7CiAgICAgIHZhciBjYXJ0SXRlbXMgPSBzdGF0ZS51c2VySXRlbS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5pZCAhPT0gaWQ7CiAgICAgIH0pOwogICAgICBzdGF0ZS51c2VySXRlbSA9IGNhcnRJdGVtczsKICAgIH0KICB9LAogIC8vIGZpbHRlclByb2R1Y3QgKHN0YXRlLCBtaW5WYWx1ZSwgbWF4VmFsdWUsIGNhdCl7CiAgLy8gICAgIGlmKGNhdCAhPT0gJycgJiYgbWluVmFsdWUgIT09ICcnICYmIG1heFZhbHVlICE9PSAnJyl7CiAgLy8gICAgICAgICBzdGF0ZS5maWx0ZXJlZFByb2R1Y3RMaXN0ID0gc3RhdGUuZmlsdGVyUHJvZHVjdExpc3QuZmlsdGVyKChwcm9kdWN0KT0+CiAgLy8gICAgICAgICAocHJvZHVjdC5wcmljZSA+PSBtaW5WYWx1ZSAmJiBwcm9kdWN0LnByaWNlKSA8PSBtYXhWYWx1ZSAmJiBwcm9kdWN0LmNhdGVnb3J5WzFdID09PSBjYXQgOwogIC8vICAgICAgICAgKQogIC8vICAgICB9ZWxzZXsKICAvLyAgICAgICAgIGNvbnNvbGUubG9nKCdmaWx0ZXIgZmFpbGVkJykKICAvLyAgICAgfQogIC8vICAgICBjb25zb2xlLmxvZyhzdGF0ZS5maWx0ZXJlZFByb2R1Y3RMaXN0KTsKICAvLyB9LAogIHRlc3Q6IGZ1bmN0aW9uIHRlc3Qoc3RhdGUsIHBheWxvYWQpIHsKICAgIC8vIGFsZXJ0KCd0ZXN0IHdhcyBjbGlja2VkJykKICAgIGlmIChwYXlsb2FkLmNhdCAhPT0gJycgJiYgcGF5bG9hZC5taW5WYWx1ZSAhPT0gMCAmJiBwYXlsb2FkLm1heFZhbHVlICE9PSAwKSB7CiAgICAgIC8vIGFsZXJ0KCdpZiBpcyBydW5uaW5nJykKICAgICAgLy8gY29uc29sZS5sb2cocGF5bG9hZCkKICAgICAgc3RhdGUuZmlsdGVyZWRQcm9kdWN0TGlzdCA9IHN0YXRlLmZpbHRlclByb2R1Y3RMaXN0LmZpbHRlcihmdW5jdGlvbiAocHJkKSB7CiAgICAgICAgcmV0dXJuIChwcmQucHJpY2UgPj0gcGF5bG9hZC5taW5WYWx1ZSAmJiBwcmQucHJpY2UpIDw9IHBheWxvYWQubWF4VmFsdWUgJiYgcHJkLmNhdGVnb3J5WzFdID09PSBwYXlsb2FkLmNhdDsKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHN0YXRlLmZpbHRlcmVkUHJvZHVjdExpc3QpOwogICAgfSBlbHNlIGlmIChwYXlsb2FkLmNhdCAmJiBwYXlsb2FkLmNhdCAhPT0gJ2FsbCcpIHsKICAgICAgYWxlcnQoJ2Vsc2UgaWYgd2FzIHJ1bm5pbmcnKTsKICAgICAgc3RhdGUuZmlsdGVyZWRQcm9kdWN0TGlzdCA9IHN0YXRlLmZpbHRlclByb2R1Y3RMaXN0LmZpbHRlcihmdW5jdGlvbiAocHJkKSB7CiAgICAgICAgcmV0dXJuIHByZC5jYXRlZ29yeVsxXSA9PT0gcGF5bG9hZC5jYXQ7CiAgICAgIH0pOwogICAgICBjb25zb2xlLmxvZyhzdGF0ZS5maWx0ZXJlZFByb2R1Y3RMaXN0KTsKICAgIH0gZWxzZSBpZiAocGF5bG9hZC5jYXQgPT09ICdhbGwnKSB7CiAgICAgIGFsZXJ0KCdhbGwnKTsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgZ2V0dGVyczogZ2V0dGVycywKICBtdXRhdGlvbnM6IG11dGF0aW9ucywKICBhY3Rpb25zOiBhY3Rpb25zCn07"},{"version":3,"mappings":"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","names":["state","productList","itemCount","userItem","filterProductList","filteredProductList","getters","allProducts","getCount","actions","getProducts","commit","fetch","res","json","data","product","forEach","productCount","console","log","setUserItem","addedItem","removeCart","id","test","payload","mutations","setProduct","index","findIndex","stock","overBy","alert","confirm","cartItems","filter","item","cat","minValue","maxValue","prd","price","category"],"sourceRoot":"","sources":["/var/www/urgen/src/store/modules/product.ts"],"sourcesContent":["const state= {\n        productList: [],\n        itemCount: 0,\n        userItem: [],\n        filterProductList: [],\n        filteredProductList: [],\n}\nconst  getters= {\n    allProducts: state => state.productList,\n    getCount: state => state.itemCount,\n    userItem: state => state.userItem\n}\nconst  actions= {\n    async getProducts ({ commit }){\n        const res = await fetch('https://electronic-ecommerce.herokuapp.com/api/v1/product');\n        const data = await res.json();\n        data.data.product.forEach((product)=> product.productCount=0)\n        console.log(data.data.product)\n        commit('setProduct', data.data.product);\n    },\n    setUserItem ({commit}, addedItem) {\n        commit('setUserItem' , addedItem);\n    },\n    removeCart ({commit}, id : Number) {\n        commit('removeCart' , id);\n    },\n    // filterProduct ({commit}, minValue, maxValue, cat) {\n    //     commit('filterProduct', minValue, maxValue, cat);\n    // }\n    test ({commit}, payload){\n        // console.log(payload)\n        commit('test', payload)\n    }\n}\n\nconst  mutations= {\n    setProduct (state, productList) {\n        state.productList= productList;\n        state.filterProductList= productList;\n    },\n    setUserItem (state:object, addedItem:object) {\n        let index= state.userItem.findIndex((product)=> product.id == addedItem.id);\n        if(index < 0){\n            state.userItem = [...state.userItem, addedItem];\n            state.itemCount++;\n        }\n        else{\n            if((state.userItem[index].productCount += addedItem.productCount) <= addedItem.stock){\n            state.userItem[index].productCount += addedItem.productCount; \n            state.userItem = [...state.userItem];\n            console.log(state.userItem);\n            }\n            else{\n                let overBy = (state.userItem[index].productCount + addedItem.productCount)-addedItem.stock;\n                alert(`Item exceeds the stock limit. Only ${overBy} item left`)\n            }\n        }\n    },\n    removeCart (state, id) {\n        if(confirm('Are you sure?')){\n        let cartItems = state.userItem.filter((item)=> item.id !== id);\n        state.userItem = cartItems;\n        }\n    },\n    // filterProduct (state, minValue, maxValue, cat){\n    //     if(cat !== '' && minValue !== '' && maxValue !== ''){\n    //         state.filteredProductList = state.filterProductList.filter((product)=>\n    //         (product.price >= minValue && product.price) <= maxValue && product.category[1] === cat ;\n    //         )\n    //     }else{\n    //         console.log('filter failed')\n    //     }\n    //     console.log(state.filteredProductList);\n    // },\n    test (state,payload) {\n        // alert('test was clicked')\n        if(payload.cat !== '' && payload.minValue !== 0 && payload.maxValue !== 0){\n            // alert('if is running')\n            // console.log(payload)\n            state.filteredProductList =state.filterProductList.filter((prd)=> (prd.price >= payload.minValue && prd.price) <= payload.maxValue && prd.category[1] === payload.cat )\n            console.log(state.filteredProductList)\n        }\n        else if (payload.cat && payload.cat !== 'all'){\n            alert('else if was running')\n            state.filteredProductList = state.filterProductList.filter((prd)=> prd.category[1] === payload.cat)\n            console.log(state.filteredProductList)\n        }\n        else if(payload.cat === 'all'){\n            alert('all')\n        }\n    }\n}\nexport default {\n    state,\n    getters,\n    mutations,\n    actions\n}"]}]}